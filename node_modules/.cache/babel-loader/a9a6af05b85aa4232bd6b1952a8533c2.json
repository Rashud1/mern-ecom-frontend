{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\Developer\\\\mern-ecommerce\\\\mern-ecommerce\\\\frontend\\\\src\\\\screens\\\\PaymentMethodScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport CheckoutSteps from '../../src/components/CheckOutSteps';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Store from '../Store';\nimport useNavigate from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentMethodScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      shippingAddress,\n      paymentMethod\n    }\n  } = state;\n  const [paymentMethodName, setPaymentMethod] = useState(paymentMethod || 'Paypal');\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_PAYMENT_METHOD',\n      paymentMethodName\n    });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Payment method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"paypal\",\n            label: \"paypal\",\n            value: \"paypal\",\n            checked: paymentMethodName === 'Paypal',\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"stipe\",\n            label: \"stripe\",\n            value: \"stripe\",\n            checked: paymentMethodName === 'Stripe',\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentMethodScreen, \"GkVRORiwDUQ6ZvjdCKKWtW8arFA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Documents/Developer/mern-ecommerce/mern-ecommerce/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useContext","useEffect","useState","CheckoutSteps","Helmet","Form","Button","Store","useNavigate","PaymentMethodScreen","navigate","state","dispatch","ctxDispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport CheckoutSteps from '../../src/components/CheckOutSteps';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Store from '../Store';\r\nimport useNavigate from 'react-router-dom';\r\n\r\nexport default function PaymentMethodScreen() {\r\n  const navigate = useNavigate();\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { shippingAddress, paymentMethod },\r\n  } = state;\r\n  const [paymentMethodName, setPaymentMethod] = useState(\r\n    paymentMethod || 'Paypal'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!shippingAddress.address) {\r\n      navigate('/shipping');\r\n    }\r\n  }, [shippingAddress, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', paymentMethodName });\r\n    localStorage.setItem('paymentMethod', paymentMethodName);\r\n    navigate('placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"container small-container\">\r\n        <Helmet>\r\n          <title>Payment Method</title>\r\n        </Helmet>\r\n        <h1 className=\"my-3\">Payment method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"paypal\"\r\n              label=\"paypal\"\r\n              value=\"paypal\"\r\n              checked={paymentMethodName === 'Paypal'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"stipe\"\r\n              label=\"stripe\"\r\n              value=\"stripe\"\r\n              checked={paymentMethodName === 'Stripe'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button type=\"submit\">Continue</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}